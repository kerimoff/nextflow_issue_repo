#!/bin/bash
#SBATCH -D /gpfs/hpc/home/a72094/projects/nextflow_ws/rnaseq-master/work/cd/2bc80a82fbb51ea5f3421c311854a0
#SBATCH -J nf-trim_galore_(SAMEA3234534)
#SBATCH -o /gpfs/hpc/home/a72094/projects/nextflow_ws/rnaseq-master/work/cd/2bc80a82fbb51ea5f3421c311854a0/.command.log
#SBATCH --no-requeue
#SBATCH -c 2
#SBATCH -t 08:00:00
#SBATCH --mem 16384

# NEXTFLOW TASK: trim_galore (SAMEA3234534)
set -e
set -u
NXF_DEBUG=${NXF_DEBUG:=0}; [[ $NXF_DEBUG > 1 ]] && set -x

nxf_env() {
    echo '============= task environment ============='
    env | sort | sed "s/\(.*\)AWS\(.*\)=\(.\{6\}\).*/\1AWS\2=\3xxxxxxxxxxxxx/"
    echo '============= task output =================='
}

nxf_kill() {
    declare -a ALL_CHILD
    while read P PP;do
        ALL_CHILD[$PP]+=" $P"
    done < <(ps -e -o pid= -o ppid=)

    walk() {
        [[ $1 != $$ ]] && kill $1 2>/dev/null || true
        for i in ${ALL_CHILD[$1]:=}; do walk $i; done
    }

    walk $1
}

nxf_mktemp() {
    local base=${1:-/tmp}
    if [[ $(uname) = Darwin ]]; then mktemp -d $base/nxf.XXXXXXXXXX
    else TMPDIR="$base" mktemp -d -t nxf.XXXXXXXXXX
    fi
}

on_exit() {
  exit_status=${ret:=$?}
  printf $exit_status > /gpfs/hpc/home/a72094/projects/nextflow_ws/rnaseq-master/work/cd/2bc80a82fbb51ea5f3421c311854a0/.exitcode
  set +u
  [[ "$tee1" ]] && kill $tee1 2>/dev/null
  [[ "$tee2" ]] && kill $tee2 2>/dev/null
  [[ "$ctmp" ]] && rm -rf $ctmp || true
  exit $exit_status
}

on_term() {
    set +e
    [[ "$pid" ]] && nxf_kill $pid
}

trap on_exit EXIT
trap on_term TERM INT USR1 USR2

export NXF_BOXID="nxf-$(dd bs=18 count=1 if=/dev/urandom 2>/dev/null | base64 | tr +/ 0A)"
NXF_SCRATCH=''
[[ $NXF_DEBUG > 0 ]] && nxf_env
touch /gpfs/hpc/home/a72094/projects/nextflow_ws/rnaseq-master/work/cd/2bc80a82fbb51ea5f3421c311854a0/.command.begin
set +u
# user `beforeScript`
module load singularity
set -u
# task environment
nxf_taskenv() {
cat << EOF
export PATH="/gpfs/hpc/home/a72094/projects/nextflow_ws/rnaseq-master/bin:\$PATH"
EOF
}

[[ $NXF_SCRATCH ]] && echo "nxf-scratch-dir $HOSTNAME:$NXF_SCRATCH" && cd $NXF_SCRATCH
# stage input files
rm -f SAMEA3234534_1.fastq.gz
rm -f SAMEA3234534_2.fastq.gz
rm -f where_are_my_files.txt
ln -s /gpfs/hpc/home/a72094/datasets/controlled_access/Schwartzentruber_2018_Neurons/temp_Schwarz/SAMEA3234534/SAMEA3234534_1.fastq.gz SAMEA3234534_1.fastq.gz
ln -s /gpfs/hpc/home/a72094/datasets/controlled_access/Schwartzentruber_2018_Neurons/temp_Schwarz/SAMEA3234534/SAMEA3234534_2.fastq.gz SAMEA3234534_2.fastq.gz
ln -s /gpfs/hpc/home/a72094/projects/nextflow_ws/rnaseq-master/assets/where_are_my_files.txt where_are_my_files.txt

set +e
ctmp=$(set +u; nxf_mktemp /dev/shm 2>/dev/null || nxf_mktemp $TMPDIR)
cout=$ctmp/.command.out; mkfifo $cout
cerr=$ctmp/.command.err; mkfifo $cerr
tee .command.out < $cout &
tee1=$!
tee .command.err < $cerr >&2 &
tee2=$!
(
set +u; env - PATH="$PATH" SINGULARITYENV_TMP="$TMP" SINGULARITYENV_TMPDIR="$TMPDIR" SINGULARITYENV_NXF_DEBUG=${NXF_DEBUG:=0} singularity exec /gpfs/hpc/home/a72094/projects/singularity_temp/NFcore_SingCont_V1.1/nfcore-rnaseq-1.1.img /bin/bash -c "cd $PWD; eval $(nxf_taskenv); /bin/bash /gpfs/hpc/home/a72094/projects/nextflow_ws/rnaseq-master/work/cd/2bc80a82fbb51ea5f3421c311854a0/.command.stub"
) >$cout 2>$cerr &
pid=$!
wait $pid || ret=$?
wait $tee1 $tee2
